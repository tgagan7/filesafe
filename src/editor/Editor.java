/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package editor;

import java.awt.Color;
import java.awt.Font;
import java.awt.Image;
import java.awt.*;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.MalformedURLException;
import java.net.URL;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author tgaga
 */
public class Editor extends javax.swing.JFrame {
    
    /**
     * Creates new form Editor
     */
    
    public Editor() {
        initComponents();
        Random r = new Random();
        frameIcon.setVisible(true);
        new Thread(){
            public void run(){
                    iconProgress.setStringPainted(true);
                    for(int i=0;i<100;){
                    i += r.nextInt(10)+1;
                    i = i>100?100:i;
                    iconProgress.setString(i+"");
                    iconProgress.setValue(i);
                    try {
                        Thread.sleep(250);
                    } catch (InterruptedException ex) {}
                }
                frameIcon.dispose();
                setVisible(true);
            }
        }.start();
        filter = new FileNameExtensionFilter(
        "All Text Files","txt", "java", "c","py");
        FileChooser.setFileFilter(filter);
        setTitle("Cognitive FileSafe ");
        //setting splash screen
        setIconImage(new ImageIcon(getClass().getResource("/editor/icon.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        jMenuItem1 = new javax.swing.JMenuItem();
        frameIcon = new javax.swing.JFrame();
        labIcon = new javax.swing.JLabel(new ImageIcon(getClass().getResource("/editor/icon.jpg")));
        iconProgress = new javax.swing.JProgressBar();
        jScrollPane1 = new javax.swing.JScrollPane();
        editorPane = new javax.swing.JEditorPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        menuNew = new javax.swing.JMenuItem();
        menuOpen = new javax.swing.JMenuItem();
        menuSave = new javax.swing.JMenuItem();
        menuExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuZoomIn = new javax.swing.JMenuItem();
        menuZoomOut = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        menuEncr = new javax.swing.JMenuItem();
        menuDecr = new javax.swing.JMenuItem();
        About = new javax.swing.JMenu();
        menuAbout = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        frameIcon.setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        frameIcon.setBackground(new java.awt.Color(255, 255, 255));
        frameIcon.setBounds(new java.awt.Rectangle((int)Toolkit.getDefaultToolkit().getScreenSize().getWidth()/2-275,(int) Toolkit.getDefaultToolkit().getScreenSize().getHeight()/2-275, 550, 580));
        frameIcon.setResizable(false);
        frameIcon.setType(java.awt.Window.Type.UTILITY);

        labIcon.setBackground(new java.awt.Color(255, 255, 255));
        labIcon.setAlignmentY(0.0F);
        labIcon.setBorder(new javax.swing.border.MatteBorder(null));
        labIcon.setIconTextGap(0);

        javax.swing.GroupLayout frameIconLayout = new javax.swing.GroupLayout(frameIcon.getContentPane());
        frameIcon.getContentPane().setLayout(frameIconLayout);
        frameIconLayout.setHorizontalGroup(
            frameIconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(labIcon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(iconProgress, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
        frameIconLayout.setVerticalGroup(
            frameIconLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frameIconLayout.createSequentialGroup()
                .addComponent(labIcon, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(iconProgress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        editorPane.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jScrollPane1.setViewportView(editorPane);

        jMenu1.setText("File");

        menuNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        menuNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/new_1.png"))); // NOI18N
        menuNew.setText("New");
        menuNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuNewActionPerformed(evt);
            }
        });
        jMenu1.add(menuNew);

        menuOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        menuOpen.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/open.png"))); // NOI18N
        menuOpen.setText("Open");
        menuOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuOpenActionPerformed(evt);
            }
        });
        jMenu1.add(menuOpen);

        menuSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        menuSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/save.png"))); // NOI18N
        menuSave.setText("Save");
        menuSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuSaveActionPerformed(evt);
            }
        });
        jMenu1.add(menuSave);

        menuExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.CTRL_MASK));
        menuExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/exit.png"))); // NOI18N
        menuExit.setText("Exit");
        menuExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuExitActionPerformed(evt);
            }
        });
        jMenu1.add(menuExit);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        menuZoomIn.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_9, java.awt.event.InputEvent.CTRL_MASK));
        menuZoomIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/zoomin.png"))); // NOI18N
        menuZoomIn.setText("Zoom In");
        menuZoomIn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuZoomInActionPerformed(evt);
            }
        });
        jMenu2.add(menuZoomIn);

        menuZoomOut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_0, java.awt.event.InputEvent.CTRL_MASK));
        menuZoomOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/editor/zoomout.png"))); // NOI18N
        menuZoomOut.setText("Zoom Out");
        menuZoomOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuZoomOutActionPerformed(evt);
            }
        });
        jMenu2.add(menuZoomOut);

        jMenuBar1.add(jMenu2);

        jMenu3.setText("Encrypt");

        menuEncr.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuEncr.setText("Encryption");
        menuEncr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuEncrActionPerformed(evt);
            }
        });
        jMenu3.add(menuEncr);

        menuDecr.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        menuDecr.setText("Decryption");
        menuDecr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuDecrActionPerformed(evt);
            }
        });
        jMenu3.add(menuDecr);

        jMenuBar1.add(jMenu3);

        About.setText("Team");
        About.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AboutActionPerformed(evt);
            }
        });

        menuAbout.setText("About us");
        menuAbout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuAboutActionPerformed(evt);
            }
        });
        About.add(menuAbout);

        jMenuItem2.setText("Contact");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        About.add(jMenuItem2);

        jMenuBar1.add(About);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 773, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuNewActionPerformed
        // TODO add your handling code here:
         editorPane.setText("");
    }//GEN-LAST:event_menuNewActionPerformed

    private void menuOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuOpenActionPerformed
        // TODO add your handling code here:
        int returnVal = FileChooser.showOpenDialog(this);
        if(returnVal==0){
            currentFilePath = FileChooser.getCurrentDirectory().getAbsolutePath()+"\\"+FileChooser.getSelectedFile().getName();
            try {
                String contents = 
                        new String(Files.readAllBytes(Paths.get(currentFilePath)));
                editorPane.setText(contents);
            } catch (IOException ex) {
                
            }
            setTitle("Cognitive FileSafe: "+currentFilePath);
        }
        savedContent = editorPane.getText();
    }//GEN-LAST:event_menuOpenActionPerformed

    private void menuSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuSaveActionPerformed
        // TODO add your handling code here:
        int ret = FileChooser.showSaveDialog(this);
        doSave(ret);
    }//GEN-LAST:event_menuSaveActionPerformed
    
    void doSave(int ch){
        if(ch==0){
           String path = 
                  FileChooser.getCurrentDirectory()+
                   "\\"+FileChooser.getSelectedFile().getName();
           try {
               File f = new File(path);
               if(f.exists()){
                   int res = JOptionPane.showConfirmDialog(this,"Do You Want to Overwrite the file");
                   if(res==0){
                       FileWriter fw = new FileWriter(f);
                       fw.write(editorPane.getText());
                       fw.close();
                   }
                   else if(res==1){
                       int ret = FileChooser.showSaveDialog(this);
                       doSave(ret);
                   }
               }else{
                   FileWriter fw = new FileWriter(f);
                   fw.write(editorPane.getText());
                   fw.close();
               }
           } catch (IOException ex) {
               
           }
           savedContent = editorPane.getText();
           setTitle("Cognitive FileSafe: "+path);
       }
    
    }
    
    
    private void menuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuExitActionPerformed
        // TODO add your handling code here:
            recentContent = editorPane.getText();
            if(savedContent.equals(recentContent)){
                System.exit(0);
            }
            else{
                int ch = JOptionPane.showConfirmDialog(this, "You have unsaved content Do you want to save?");
                if (ch == 0){
                    int ret = FileChooser.showSaveDialog(this);
                    doSave(ret);
                    System.exit(0);
                }
                else if(ch == 1){
                    System.exit(0);
                }
            }
        
    }//GEN-LAST:event_menuExitActionPerformed

    private void menuZoomOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuZoomOutActionPerformed
        // TODO add your handling code here:
        if (size>12)
            editorPane.setFont(new Font(Font.SANS_SERIF,0,--size));
    }//GEN-LAST:event_menuZoomOutActionPerformed

    private void menuZoomInActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuZoomInActionPerformed
        // TODO add your handling code here:
        if (size<=30)
            editorPane.setFont(new Font(Font.SANS_SERIF,0,++size));
    }//GEN-LAST:event_menuZoomInActionPerformed

    private void menuEncrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuEncrActionPerformed
        // TODO add your handling code here:
        String pass = JOptionPane.showInputDialog(this,"Set Password for Encryption (min. length 5 chars)","Password To Encrypt",  DISPOSE_ON_CLOSE);
        if(pass!=null && pass.length()>=5){
            editorPane.setText(encrData(pass).toString()+"\n"+encrData(editorPane.getText()).toString());
            int ret = FileChooser.showSaveDialog(this);
            doSave(ret);
        }else{
            JOptionPane.showMessageDialog(this, "Invalid Password Please Retry!!!!!!");
        }
        
    }//GEN-LAST:event_menuEncrActionPerformed

    private void menuDecrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuDecrActionPerformed
        // TODO add your handling code here:
        String pass = JOptionPane.showInputDialog(this,"Enter Decryption Password","Password To Decrypt",  DISPOSE_ON_CLOSE);
        String temp = editorPane.getText();
        String passActual = decrData(temp.substring(0,temp.indexOf("\n"))).toString();
        
        if(pass!=null && pass.equals(passActual)){
            editorPane.setText(decrData(temp.substring(temp.indexOf("\n")+1)).toString());
        }else{
             JOptionPane.showMessageDialog(this, "Invalid Password Please Retry!!!!!!");
        }
        
    }//GEN-LAST:event_menuDecrActionPerformed

    private void AboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AboutActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_AboutActionPerformed

    private void menuAboutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuAboutActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this, "Developed By !!!!!! \n Cognitive Creators "
                 + "\n © Cognitive 2019");
    }//GEN-LAST:event_menuAboutActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(this,"Facebook :- www.facebook.com/gagandeep.thakur\nPhone:- 7003572954\nEmail :- gagan.training@gmail.com");
    }//GEN-LAST:event_jMenuItem2ActionPerformed
    
    private StringBuilder encrData(String data){
            StringBuilder sb = new StringBuilder();
            char c;
            long l;
            for(int i=0;i<data.length();i++){
                c = data.charAt(i);
                l = i*i;
                if(l%2==0){
                    c += (l%10);
                }
                else{
                    c -= ((l%10));
                }
                sb.append(c);
            }
            return sb;
    }
    private StringBuilder decrData(String data){
        StringBuilder sb = new StringBuilder();
            char c;
            long l;
            for(int i=0;i<data.length();i++){
                c = data.charAt(i);
                l = i*i;
                if(l%2==0){
                    c -= (l%10);
                }
                else{
                    c += ((l%10));
                }
                sb.append(c);
            }
            return sb;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Editor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Editor();
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu About;
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JEditorPane editorPane;
    private javax.swing.JFrame frameIcon;
    private javax.swing.JProgressBar iconProgress;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labIcon;
    private javax.swing.JMenuItem menuAbout;
    private javax.swing.JMenuItem menuDecr;
    private javax.swing.JMenuItem menuEncr;
    private javax.swing.JMenuItem menuExit;
    private javax.swing.JMenuItem menuNew;
    private javax.swing.JMenuItem menuOpen;
    private javax.swing.JMenuItem menuSave;
    private javax.swing.JMenuItem menuZoomIn;
    private javax.swing.JMenuItem menuZoomOut;
    // End of variables declaration//GEN-END:variables
     String currentFilePath;
     FileNameExtensionFilter filter;
     String recentContent="";
     String savedContent= "";
     int size = 12;
}
